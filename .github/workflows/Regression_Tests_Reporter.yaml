---
name: Regression Tests - Agent

on: workflow_call

jobs:
  Reporter:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python: ['3.9', '3.10', '3.11', '3.12', '3.13']
      fail-fast: false
    runs-on: ${{ matrix.platform }}
    steps:
      - name: "Echo Vars"
        run: |
          echo matrix.platform: ${{ matrix.platform }}
          echo matrix.python: ${{ matrix.python }}
      - name: (MacOS, <3.11) Fix Python's tkinter Issue-649 (https://github.com/actions/setup-python/issues/649)
        shell: bash
        if: ${{ startswith(matrix.platform, 'macos-') && contains('3.7;3.8;3.9;3.10', matrix.python) }}
        run: |
          brew install tcl-tk pyenv openssl readline sqlite3 xz zlib
          env \
            PATH="$(brew --prefix tcl-tk)/bin:$PATH" \
            LDFLAGS="-L$(brew --prefix tcl-tk)/lib" \
            CPPFLAGS="-I$(brew --prefix tcl-tk)/include" \
            PKG_CONFIG_PATH="$(brew --prefix tcl-tk)/lib/pkgconfig" \
            CFLAGS="-I$(brew --prefix tcl-tk)/include" \
            PYTHON_CONFIGURE_OPTS="--with-tcltk-includes='-I$(brew --prefix tcl-tk)/include' --with-tcltk-libs='-L$(brew --prefix tcl-tk)/lib -ltcl8.6 -ltk8.6'" \
            pyenv install ${{matrix.python}}
          pyenv global ${{matrix.python}}
      - name: setup-python
        if: ${{ !startswith(matrix.platform, 'macos-') || contains('3.11;3.12;', matrix.python) }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Pip Update
        run: python -m pip install --upgrade pip
      - name: Checkout
        uses: actions/checkout@v4
      - name: "Apt Update"
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: |
          sudo apt update -y
      - name: "Ubuntu Installs"
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        # Install the minimal LXQt desktop.
        # sudo apt install lxqt
        # Install the Xfce desktop.
        # sudo apt install xfce4
          # sudo apt -y install python3-tk python3-dev python3-xlib scrot fluxbox tesseract-ocr
        run: |
          sudo apt -y install python3-tk python3-dev python3-xlib scrot lxqt tesseract-ocr
          sudo apt -y install xsel xclip
          sudo apt list --installed
      - name: "Ubuntu Xvfb"
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: |
          export DISPLAY=:13.0
          Xvfb :13 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          # xauth with complain unless ~/.Xauthority exists
          touch ~/.Xauthority
          # To view a listing of the .Xauthority file, enter the following
          xauth list
          sleep 1
          # fluxbox
          # fluxbox &
          # lxqt
          startlxqt &
      - name: "MacOS Install tesseract"
        if: ${{ matrix.platform == 'macos-latest' }}
        run: |
          brew install tesseract
      - name: "Windows Download Tesseract"
        if: ${{ matrix.platform == 'windows-latest' }}
        shell: pwsh
        run: >
          Invoke-WebRequest
          -Uri "https://digi.bib.uni-mannheim.de/tesseract/tesseract-ocr-w64-setup-5.3.1.20230401.exe"
          -OutFile "$($ENV:Temp)\tesseract-ocr-w64-setup-5.3.1.20230401.exe"
      - name: "Windows Install Tesseract"
        if: ${{ matrix.platform == 'windows-latest' }}
        shell: cmd
        run: |
          "%Temp%\tesseract-ocr-w64-setup-5.3.1.20230401.exe" /S
      - name: "Windows Add Tesseract to Path"
        if: ${{ matrix.platform == 'windows-latest' }}
        shell: pwsh
        run: |
          echo "$($ENV:ProgramFiles)\Tesseract-OCR" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: "Verify tesseract"
        run: tesseract -v

        # https://github.com/actions/runner-images/issues/2935
      - name: "Windows Set Display Resolution"
        if: ${{ matrix.platform == 'windows-latest' }}
        shell: pwsh
        run: |
          Set-DisplayResolution -Width 1920 -Height 1080 -Force

      - name: Update Robot Tag
        shell: python
        run: |
          import os
          tag = "${{ matrix.platform }}"
          tagarr = tag.split("-")
          tag = "{}-latest".format(tagarr[0])
          platform = "{}".format(tagarr[0])

          env_file = os.getenv('GITHUB_ENV')
          with open(env_file, "a") as myfile:
            myfile.write("tag={}\n".format(tag))
            myfile.write("platformos={}\n".format(platform))

      - name: Download packages to dist
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Show Dist UM
        if: ${{ matrix.platform != 'windows-latest' }}
        run: |
          ls -la dist
      - name: Show Dist W
        if: ${{ matrix.platform == 'windows-latest' }}
        run: |
          dir dist
      # - name: "Ubuntu pip installs"
      #   if: ${{ matrix.platform == 'ubuntu-latest' }}
      #   run: pip install gtk PyQt4
      - name: Install Reporter from dist UM
        if: ${{ matrix.platform != 'windows-latest' }}
        run: pip install rfswarm_reporter-*.whl
        working-directory: ./dist
      - name: Install Reporter from dist W
        if: ${{ matrix.platform == 'windows-latest' }}
        shell: cmd
        run: for %%f in (rfswarm_reporter-*.whl) do pip install %%f
        working-directory: ./dist
      - run: pip install -r Tests/Regression/Reporter/pip_requirements_${{ env.platformos }}.txt

      - name: Robot Framework
        id: robottest
        run: >
          robot --include ${{ env.tag }}
          --outputdir Tests/Regression/Reporter/Logs/${{ matrix.platform }}_${{ matrix.python }}
          Tests/Regression/Reporter
        env:
          DISPLAY: :13.0

      - name: Try and fix images with relative path
        if: ${{ !cancelled() && matrix.platform != 'macos-latest' }}
        run: |
          cd Tests/Regression/Reporter/Logs/${{ matrix.platform }}_${{ matrix.python }}
          sed --in-place=.bak 's/img src=".*${{ matrix.platform }}_${{ matrix.python }}/img src="./g' ./output.xml
          rebot ./output.xml
      - name: Try and fix images with relative path (macos)
        if: ${{ !cancelled() &&  matrix.platform == 'macos-latest' }}
        run: |
          cd Tests/Regression/Reporter/Logs/${{ matrix.platform }}_${{ matrix.python }}
          sed -i.bak 's/img src=".*${{ matrix.platform }}_${{ matrix.python }}/img src="./g' ./output.xml
          rebot ./output.xml

      - name: Archive Reporter Logs
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: Reporter-${{ matrix.platform }}-${{ matrix.python }}
          path: Tests/Regression/Reporter/Logs/${{ matrix.platform }}_${{ matrix.python }}
          retention-days: 15

      - name: Archive Reporter Logs (longer retention if failed)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: Reporter-${{ matrix.platform }}-${{ matrix.python }}
          path: Tests/Regression/Reporter/Logs/${{ matrix.platform }}_${{ matrix.python }}
          retention-days: 90
