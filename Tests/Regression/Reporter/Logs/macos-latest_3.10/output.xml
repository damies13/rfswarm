<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.10.12 on darwin)" generated="20230710 13:20:13.828" rpa="false" schemaversion="4">
<suite id="s1" name="Reporter" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter">
<suite id="s1-s1" name="CommandLine" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/CommandLine.robot">
<kw name="Clean Up Old Files" type="SETUP">
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<kw name="Log To Console" library="BuiltIn">
<arg>${OUTPUT DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230710 13:20:13.872" endtime="20230710 13:20:13.872"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.txt</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230710 13:20:13.873" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/stdout.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/stdout.txt&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.873" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/stderr.txt"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/stderr.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230710 13:20:13.873" endtime="20230710 13:20:13.874"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${OUTPUT DIR}${/}*.png</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20230710 13:20:13.874" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-8.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-8.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.875" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-9.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-9.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.875" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-18.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-18.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.875" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-19.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-19.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.875" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-20.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-20.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.875" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-12.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-12.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.876" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-1.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-1.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.876" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-13.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-13.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.876" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-11.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-11.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.876" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-2.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-2.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.876" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-3.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-3.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.877" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-10.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-10.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.877" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-14.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-14.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.877" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-7.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-7.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.877" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-6.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-6.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.878" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-15.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-15.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.878" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-17.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-17.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.878" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-4.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-4.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.878" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-5.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-5.png&lt;/a&gt;'.</msg>
<msg timestamp="20230710 13:20:13.878" level="INFO" html="true">Removed file '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-16.png"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-16.png&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20230710 13:20:13.874" endtime="20230710 13:20:13.878"/>
</kw>
<status status="PASS" starttime="20230710 13:20:13.872" endtime="20230710 13:20:13.879"/>
</kw>
<test id="s1-s1-t1" name="Reporter Version" line="16">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -v</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230710 13:20:13.882" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -v 2&gt;&amp;1'.</msg>
<msg timestamp="20230710 13:20:27.480" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 </msg>
<status status="PASS" starttime="20230710 13:20:13.879" endtime="20230710 13:20:27.480"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230710 13:20:27.480" endtime="20230710 13:20:27.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Version</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230710 13:20:27.481" endtime="20230710 13:20:27.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Reporter</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230710 13:20:27.481" endtime="20230710 13:20:27.481"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230710 13:20:13.879" endtime="20230710 13:20:27.482"/>
</test>
<test id="s1-s1-t2" name="Reporter Help" line="23">
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${EXECDIR}${/}rfswarm_reporter${/}rfswarm_reporter.py -h</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230710 13:20:27.488" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -h 2&gt;&amp;1'.</msg>
<msg timestamp="20230710 13:20:29.098" level="INFO">${result} = Robot Framework Swarm: Reporter 
	Version 1.1.3 
usage: rfswarm_reporter.py [-h] [-g DEBUG] [-v] [-i INI] [-n] [-d DIR]
                           [-t TEMPLATE] [--html] [--docx] [--xlsx]

options:
  ...</msg>
<status status="PASS" starttime="20230710 13:20:27.483" endtime="20230710 13:20:29.098"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${\n}${result}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230710 13:20:29.099" endtime="20230710 13:20:29.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Excel</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230710 13:20:29.099" endtime="20230710 13:20:29.100"/>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230710 13:20:27.482" endtime="20230710 13:20:29.100"/>
</test>
<test id="s1-s1-t3" name="Command Line Generate HTML" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:29.101" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230710 13:20:29.101" endtime="20230710 13:20:29.101"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:29.101" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230710 13:20:29.101" endtime="20230710 13:20:29.101"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:29.102" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230710 13:20:29.102" endtime="20230710 13:20:29.102"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:20:29.102" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:20:29.102" endtime="20230710 13:20:29.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:29.103" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230710 13:20:29.103" endtime="20230710 13:20:29.103"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:29.103" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230710 13:20:29.103" endtime="20230710 13:20:29.103"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:20:29.104" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:20:29.104" endtime="20230710 13:20:29.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:29.104" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230710 13:20:29.104" endtime="20230710 13:20:29.104"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:29.105" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230710 13:20:29.104" endtime="20230710 13:20:29.105"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:20:29.105" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:20:29.105" endtime="20230710 13:20:29.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:29.106" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230710 13:20:29.106" endtime="20230710 13:20:29.106"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --html</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230710 13:20:29.111" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --html 2&gt;&amp;1'.</msg>
<msg timestamp="20230710 13:20:35.133" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230710 13:20:29.106" endtime="20230710 13:20:35.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>result: ${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:35.134" level="INFO">result: 
</msg>
<status status="PASS" starttime="20230710 13:20:35.134" endtime="20230710 13:20:35.135"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230710 13:20:35.135" endtime="20230710 13:20:35.135"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.html</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:20:35.135" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.html&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:20:35.135" endtime="20230710 13:20:35.135"/>
</kw>
<tag>HTML</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230710 13:20:29.100" endtime="20230710 13:20:35.136"/>
</test>
<test id="s1-s1-t4" name="Command Line Generate Docx" line="47">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:35.137" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230710 13:20:35.137" endtime="20230710 13:20:35.137"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:35.137" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230710 13:20:35.137" endtime="20230710 13:20:35.137"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:35.138" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230710 13:20:35.138" endtime="20230710 13:20:35.138"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:20:35.138" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:20:35.138" endtime="20230710 13:20:35.138"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230710 13:20:35.138" endtime="20230710 13:20:35.139"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:35.139" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230710 13:20:35.139" endtime="20230710 13:20:35.139"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:20:35.140" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:20:35.139" endtime="20230710 13:20:35.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:35.140" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230710 13:20:35.140" endtime="20230710 13:20:35.140"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:35.141" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230710 13:20:35.140" endtime="20230710 13:20:35.141"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:20:35.141" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:20:35.141" endtime="20230710 13:20:35.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:35.141" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230710 13:20:35.141" endtime="20230710 13:20:35.142"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --docx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230710 13:20:35.146" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --docx 2&gt;&amp;1'.</msg>
<msg timestamp="20230710 13:20:42.824" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230710 13:20:35.142" endtime="20230710 13:20:42.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:42.825" level="INFO">
</msg>
<status status="PASS" starttime="20230710 13:20:42.825" endtime="20230710 13:20:42.825"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230710 13:20:42.825" endtime="20230710 13:20:42.826"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.docx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:20:42.826" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.docx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:20:42.826" endtime="20230710 13:20:42.826"/>
</kw>
<tag>DOCX</tag>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="PASS" starttime="20230710 13:20:35.136" endtime="20230710 13:20:42.827"/>
</test>
<test id="s1-s1-t5" name="Command Line Generate Xlsx" line="65">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#144</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:42.828" level="INFO">${testdata} = Issue-#144</msg>
<status status="PASS" starttime="20230710 13:20:42.828" endtime="20230710 13:20:42.828"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:42.828" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230710 13:20:42.828" endtime="20230710 13:20:42.828"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:42.829" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230710 13:20:42.828" endtime="20230710 13:20:42.829"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:20:42.829" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:20:42.829" endtime="20230710 13:20:42.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:42.830" level="INFO">basefolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144</msg>
<status status="PASS" starttime="20230710 13:20:42.829" endtime="20230710 13:20:42.830"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:42.830" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230710 13:20:42.830" endtime="20230710 13:20:42.830"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:20:42.831" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:20:42.830" endtime="20230710 13:20:42.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:42.831" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo</msg>
<status status="PASS" starttime="20230710 13:20:42.831" endtime="20230710 13:20:42.831"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${template}</var>
<arg>${basefolder}${/}90%ileTemplate.template</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:42.832" level="INFO">${template} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230710 13:20:42.832" endtime="20230710 13:20:42.832"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${template}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:20:42.832" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:20:42.832" endtime="20230710 13:20:42.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>template: ${template}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:42.833" level="INFO">template: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template</msg>
<status status="PASS" starttime="20230710 13:20:42.832" endtime="20230710 13:20:42.833"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${result}</var>
<arg>python3 ${pyfile} -n -g 1 -d ${resultfolder} -t ${template} --xlsx</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230710 13:20:42.838" level="INFO">Running command 'python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -n -g 1 -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo -t /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/90%ileTemplate.template --xlsx 2&gt;&amp;1'.</msg>
<msg timestamp="20230710 13:20:48.969" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230710 13:20:42.833" endtime="20230710 13:20:48.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${\n}${result}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:48.971" level="INFO">
</msg>
<status status="PASS" starttime="20230710 13:20:48.970" endtime="20230710 13:20:48.971"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230710 13:20:48.972" endtime="20230710 13:20:48.973"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}${/}${resultdata}.xlsx</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:20:48.975" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#144/20230320_185055_demo/20230320_185055_demo.xlsx&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:20:48.973" endtime="20230710 13:20:48.975"/>
</kw>
<tag>Issue #144</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<tag>XLSX</tag>
<status status="PASS" starttime="20230710 13:20:42.827" endtime="20230710 13:20:48.975"/>
</test>
<status status="PASS" starttime="20230710 13:20:13.857" endtime="20230710 13:20:48.978"/>
</suite>
<suite id="s1-s2" name="GUI Basic" source="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot">
<test id="s1-s2-t1" name="GUI Runs and Closes" line="19">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230710 13:20:58.146" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230710 13:20:58.145" endtime="20230710 13:20:58.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:58.147" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/output.xml', '${PREV_TEST_MESSAGE}': '', '${PREV_TEST_NAME}': 'Command Line Generate Xlsx', '${PREV_TEST_STATUS}': 'PASS', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'GUI Runs and Closes', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': Metadata(), '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230710 13:20:58.146" endtime="20230710 13:20:58.147"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230710 13:20:58.148" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230710 13:20:58.147" endtime="20230710 13:20:58.148"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230710 13:20:58.148" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230710 13:20:58.148" endtime="20230710 13:20:58.148"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:20:58.150" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230710 13:20:58.148" endtime="20230710 13:20:58.150"/>
</kw>
<status status="PASS" starttime="20230710 13:20:58.147" endtime="20230710 13:20:58.150"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:58.150" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230710 13:20:58.150" endtime="20230710 13:20:58.150"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:20:58.157" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230710 13:20:58.156" endtime="20230710 13:20:58.157"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230710 13:20:58.157" endtime="20230710 13:20:58.157"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230710 13:20:58.158" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<msg timestamp="20230710 13:20:58.164" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230710 13:20:58.157" endtime="20230710 13:20:58.165"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:20:58.166" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230710 13:20:58.165" endtime="20230710 13:20:58.166"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230710 13:20:58.166" endtime="20230710 13:20:58.166"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:20:58.167" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-1.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-1.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:20:58.167" endtime="20230710 13:20:58.466"/>
</kw>
<status status="PASS" starttime="20230710 13:20:58.156" endtime="20230710 13:20:58.467"/>
</kw>
<status status="PASS" starttime="20230710 13:20:58.150" endtime="20230710 13:20:58.467"/>
</kw>
<status status="PASS" starttime="20230710 13:20:58.144" endtime="20230710 13:20:58.467"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230710 13:20:58.468" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230710 13:20:58.468" endtime="20230710 13:20:58.468"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:20:58.469" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230710 13:20:58.469" endtime="20230710 13:20:58.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:58.469" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230710 13:20:58.469" endtime="20230710 13:20:58.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:20:58.470" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230710 13:20:58.469" endtime="20230710 13:20:58.470"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:25:58.708" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-2.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-2.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:25:58.707" endtime="20230710 13:25:59.087"/>
</kw>
<msg timestamp="20230710 13:25:59.088" level="FAIL">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen</msg>
<status status="FAIL" starttime="20230710 13:20:58.470" endtime="20230710 13:25:59.088"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230710 13:25:59.089" endtime="20230710 13:25:59.089"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230710 13:25:59.089" endtime="20230710 13:25:59.089"/>
</kw>
<status status="FAIL" starttime="20230710 13:20:58.467" endtime="20230710 13:25:59.089"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:25:59.091" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230710 13:25:59.091" endtime="20230710 13:25:59.091"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230710 13:25:59.092" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230710 13:25:59.092" endtime="20230710 13:25:59.092"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230710 13:25:59.583" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen.</msg>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:25:59.584" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-3.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-3.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:25:59.584" endtime="20230710 13:25:59.935"/>
</kw>
<msg timestamp="20230710 13:25:59.936" level="FAIL">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen</msg>
<status status="FAIL" starttime="20230710 13:25:59.099" endtime="20230710 13:25:59.937"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:25:59.938" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-4.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-4.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:25:59.937" endtime="20230710 13:26:00.306"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230710 13:26:00.844" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230710 13:26:00.307" endtime="20230710 13:26:00.844"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230710 13:26:00.846" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230710 13:27:01.028" level="INFO">Process did not complete in 1 minute.</msg>
<msg timestamp="20230710 13:27:01.029" level="INFO">Leaving process intact.</msg>
<msg timestamp="20230710 13:27:01.029" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20230710 13:26:00.845" endtime="20230710 13:27:01.029"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230710 13:27:01.030" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230710 13:27:01.029" endtime="20230710 13:27:01.030"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230710 13:27:01.030" endtime="20230710 13:27:01.030"/>
</kw>
<status status="NOT RUN" starttime="20230710 13:27:01.030" endtime="20230710 13:27:01.030"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:27:01.031" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-5.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-5.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:27:01.031" endtime="20230710 13:27:01.370"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20230710 13:27:01.371" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20230710 13:27:01.601" level="INFO">Process completed.</msg>
<msg timestamp="20230710 13:27:01.602" level="INFO">${result} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20230710 13:27:01.371" endtime="20230710 13:27:01.602"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:27:01.607" level="INFO">Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)</msg>
<status status="PASS" starttime="20230710 13:27:01.604" endtime="20230710 13:27:01.608"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20230710 13:27:01.611" level="FAIL">'Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)' contains 'Traceback'</msg>
<status status="FAIL" starttime="20230710 13:27:01.608" endtime="20230710 13:27:01.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230710 13:27:01.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230710 13:27:01.613" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20230710 13:27:01.612" endtime="20230710 13:27:01.614"/>
</kw>
<status status="FAIL" starttime="20230710 13:27:01.602" endtime="20230710 13:27:01.614"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230710 13:27:01.615" level="FAIL">Had to Terminate Process</msg>
<status status="FAIL" starttime="20230710 13:27:01.614" endtime="20230710 13:27:01.615"/>
</kw>
<status status="FAIL" starttime="20230710 13:27:01.030" endtime="20230710 13:27:01.615"/>
</branch>
<status status="FAIL" starttime="20230710 13:27:01.030" endtime="20230710 13:27:01.616"/>
</if>
<status status="FAIL" starttime="20230710 13:26:00.844" endtime="20230710 13:27:01.616"/>
</kw>
<status status="FAIL" starttime="20230710 13:25:59.099" endtime="20230710 13:27:01.616"/>
</kw>
<status status="FAIL" starttime="20230710 13:25:59.093" endtime="20230710 13:27:01.616"/>
</kw>
<status status="FAIL" starttime="20230710 13:25:59.092" endtime="20230710 13:27:01.616"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230710 13:27:01.616" endtime="20230710 13:27:01.620"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230710 13:27:01.620" endtime="20230710 13:27:01.621"/>
</kw>
<status status="NOT RUN" starttime="20230710 13:27:01.616" endtime="20230710 13:27:01.621"/>
</branch>
<status status="FAIL" starttime="20230710 13:25:59.092" endtime="20230710 13:27:01.621"/>
</if>
<status status="FAIL" starttime="20230710 13:25:59.092" endtime="20230710 13:27:01.622"/>
</branch>
<status status="FAIL" starttime="20230710 13:25:59.091" endtime="20230710 13:27:01.622"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:27:01.623" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230710 13:27:01.622" endtime="20230710 13:27:01.623"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230710 13:27:02.168" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230710 13:27:01.623" endtime="20230710 13:27:02.169"/>
</kw>
<status status="FAIL" starttime="20230710 13:25:59.090" endtime="20230710 13:27:02.169">Several failures occurred:

1) ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen

2) 'Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)' contains 'Traceback'

3) 1 != 0

4) Had to Terminate Process</status>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230710 13:20:58.143" endtime="20230710 13:27:02.169">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen

Also teardown failed:
Several failures occurred:

1) ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen

2) 'Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)' contains 'Traceback'

3) 1 != 0

4) Had to Terminate Process</status>
</test>
<test id="s1-s2-t2" name="Select Preview Tab" line="25">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230710 13:27:02.171" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230710 13:27:02.171" endtime="20230710 13:27:02.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:27:02.172" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': 'ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen\n\nAlso teardown failed:\nSeveral failures occurred:\n\n1) ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen\n\n2) \'Traceback (most recent call last):\n  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;\n    core = ReporterCore()\n  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__\n    base.gui = ReporterGUI()\n  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__\n    self.root = tk.Tk()\n  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__\n    self._loadtk()\n  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk\n    raise RuntimeError("tk.h version (%s) doesn\'t match libtk.a version (%s)"\nRuntimeError: tk.h version (8.5) doesn\'t match libtk.a version (8.6)\' contains \'Traceback\'\n\n3) 1 != 0\n\n4) Had to Terminate Process', '${PREV_TEST_NAME}': 'GUI Runs and Closes', '${PREV_TEST_STATUS}': 'FAIL', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'Select Preview Tab', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': Metadata(), '@{appargs}': [], '@{TEST_TAGS}': ['macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230710 13:27:02.172" endtime="20230710 13:27:02.172"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230710 13:27:02.173" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230710 13:27:02.173" endtime="20230710 13:27:02.173"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230710 13:27:02.174" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230710 13:27:02.173" endtime="20230710 13:27:02.174"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:27:02.174" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230710 13:27:02.174" endtime="20230710 13:27:02.174"/>
</kw>
<status status="PASS" starttime="20230710 13:27:02.172" endtime="20230710 13:27:02.174"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:27:02.175" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230710 13:27:02.174" endtime="20230710 13:27:02.175"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:27:02.181" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230710 13:27:02.181" endtime="20230710 13:27:02.182"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230710 13:27:02.182" endtime="20230710 13:27:02.182"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230710 13:27:02.184" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<msg timestamp="20230710 13:27:02.191" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230710 13:27:02.182" endtime="20230710 13:27:02.192"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:27:02.194" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230710 13:27:02.193" endtime="20230710 13:27:02.194"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230710 13:27:02.194" endtime="20230710 13:27:02.194"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:27:02.195" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-6.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-6.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:27:02.194" endtime="20230710 13:27:02.532"/>
</kw>
<status status="PASS" starttime="20230710 13:27:02.181" endtime="20230710 13:27:02.532"/>
</kw>
<status status="PASS" starttime="20230710 13:27:02.175" endtime="20230710 13:27:02.532"/>
</kw>
<status status="PASS" starttime="20230710 13:27:02.170" endtime="20230710 13:27:02.533"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230710 13:27:02.534" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230710 13:27:02.534" endtime="20230710 13:27:02.534"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:27:02.535" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230710 13:27:02.534" endtime="20230710 13:27:02.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:27:02.535" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230710 13:27:02.535" endtime="20230710 13:27:02.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:27:02.536" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230710 13:27:02.535" endtime="20230710 13:27:02.536"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:32:02.695" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-7.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-7.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:32:02.694" endtime="20230710 13:32:03.050"/>
</kw>
<msg timestamp="20230710 13:32:03.050" level="FAIL">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen</msg>
<status status="FAIL" starttime="20230710 13:27:02.536" endtime="20230710 13:32:03.051"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230710 13:32:03.051" endtime="20230710 13:32:03.051"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230710 13:32:03.051" endtime="20230710 13:32:03.051"/>
</kw>
<status status="FAIL" starttime="20230710 13:27:02.533" endtime="20230710 13:32:03.052"/>
</kw>
<kw name="Click Tab">
<arg>Preview</arg>
<status status="NOT RUN" starttime="20230710 13:32:03.052" endtime="20230710 13:32:03.052"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:32:03.054" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230710 13:32:03.053" endtime="20230710 13:32:03.054"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230710 13:32:03.055" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230710 13:32:03.054" endtime="20230710 13:32:03.055"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230710 13:32:03.474" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen.</msg>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:32:03.476" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-8.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-8.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:32:03.475" endtime="20230710 13:32:03.749"/>
</kw>
<msg timestamp="20230710 13:32:03.749" level="FAIL">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen</msg>
<status status="FAIL" starttime="20230710 13:32:03.061" endtime="20230710 13:32:03.749"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:32:03.750" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-9.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-9.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:32:03.750" endtime="20230710 13:32:04.024"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230710 13:32:04.526" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230710 13:32:04.025" endtime="20230710 13:32:04.526"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230710 13:32:04.527" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230710 13:33:04.620" level="INFO">Process did not complete in 1 minute.</msg>
<msg timestamp="20230710 13:33:04.620" level="INFO">Leaving process intact.</msg>
<msg timestamp="20230710 13:33:04.620" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20230710 13:32:04.527" endtime="20230710 13:33:04.620"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230710 13:33:04.621" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230710 13:33:04.620" endtime="20230710 13:33:04.621"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230710 13:33:04.621" endtime="20230710 13:33:04.621"/>
</kw>
<status status="NOT RUN" starttime="20230710 13:33:04.621" endtime="20230710 13:33:04.622"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:33:04.622" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-10.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-10.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:33:04.622" endtime="20230710 13:33:04.904"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20230710 13:33:04.905" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20230710 13:33:05.007" level="INFO">Process completed.</msg>
<msg timestamp="20230710 13:33:05.007" level="INFO">${result} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20230710 13:33:04.904" endtime="20230710 13:33:05.007"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:33:05.012" level="INFO">Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)</msg>
<status status="PASS" starttime="20230710 13:33:05.010" endtime="20230710 13:33:05.012"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20230710 13:33:05.014" level="FAIL">'Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)' contains 'Traceback'</msg>
<status status="FAIL" starttime="20230710 13:33:05.012" endtime="20230710 13:33:05.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230710 13:33:05.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230710 13:33:05.018" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20230710 13:33:05.015" endtime="20230710 13:33:05.018"/>
</kw>
<status status="FAIL" starttime="20230710 13:33:05.008" endtime="20230710 13:33:05.019"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230710 13:33:05.019" level="FAIL">Had to Terminate Process</msg>
<status status="FAIL" starttime="20230710 13:33:05.019" endtime="20230710 13:33:05.020"/>
</kw>
<status status="FAIL" starttime="20230710 13:33:04.622" endtime="20230710 13:33:05.020"/>
</branch>
<status status="FAIL" starttime="20230710 13:33:04.621" endtime="20230710 13:33:05.020"/>
</if>
<status status="FAIL" starttime="20230710 13:32:04.526" endtime="20230710 13:33:05.021"/>
</kw>
<status status="FAIL" starttime="20230710 13:32:03.061" endtime="20230710 13:33:05.021"/>
</kw>
<status status="FAIL" starttime="20230710 13:32:03.055" endtime="20230710 13:33:05.021"/>
</kw>
<status status="FAIL" starttime="20230710 13:32:03.055" endtime="20230710 13:33:05.021"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230710 13:33:05.022" endtime="20230710 13:33:05.022"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230710 13:33:05.022" endtime="20230710 13:33:05.022"/>
</kw>
<status status="NOT RUN" starttime="20230710 13:33:05.021" endtime="20230710 13:33:05.022"/>
</branch>
<status status="FAIL" starttime="20230710 13:32:03.055" endtime="20230710 13:33:05.022"/>
</if>
<status status="FAIL" starttime="20230710 13:32:03.054" endtime="20230710 13:33:05.022"/>
</branch>
<status status="FAIL" starttime="20230710 13:32:03.054" endtime="20230710 13:33:05.022"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:33:05.023" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230710 13:33:05.023" endtime="20230710 13:33:05.024"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230710 13:33:05.554" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230710 13:33:05.024" endtime="20230710 13:33:05.555"/>
</kw>
<status status="FAIL" starttime="20230710 13:32:03.052" endtime="20230710 13:33:05.555">Several failures occurred:

1) ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen

2) 'Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)' contains 'Traceback'

3) 1 != 0

4) Had to Terminate Process</status>
</kw>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230710 13:27:02.170" endtime="20230710 13:33:05.555">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen

Also teardown failed:
Several failures occurred:

1) ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen

2) 'Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)' contains 'Traceback'

3) 1 != 0

4) Had to Terminate Process</status>
</test>
<test id="s1-s2-t3" name="First Run" line="32">
<kw name="Set Variable" library="BuiltIn">
<var>${testdata}</var>
<arg>Issue-#147</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:33:05.557" level="INFO">${testdata} = Issue-#147</msg>
<status status="PASS" starttime="20230710 13:33:05.556" endtime="20230710 13:33:05.557"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultdata}</var>
<arg>20230320_185055_demo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:33:05.557" level="INFO">${resultdata} = 20230320_185055_demo</msg>
<status status="PASS" starttime="20230710 13:33:05.557" endtime="20230710 13:33:05.557"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${basefolder}</var>
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter${/}testdata${/}${testdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:33:05.557" level="INFO">${basefolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147</msg>
<status status="PASS" starttime="20230710 13:33:05.557" endtime="20230710 13:33:05.557"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${basefolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:33:05.558" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:33:05.558" endtime="20230710 13:33:05.558"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>basefolder: ${basefolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230710 13:33:05.559" endtime="20230710 13:33:05.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resultfolder}</var>
<arg>${basefolder}${/}${resultdata}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:33:05.560" level="INFO">${resultfolder} = /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230710 13:33:05.560" endtime="20230710 13:33:05.560"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<arg>${resultfolder}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20230710 13:33:05.561" level="INFO" html="true">Path '&lt;a href="file:///Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo"&gt;/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230710 13:33:05.560" endtime="20230710 13:33:05.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>resultfolder: ${resultfolder}</arg>
<arg>console=True</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:33:05.561" level="INFO">resultfolder: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<status status="PASS" starttime="20230710 13:33:05.561" endtime="20230710 13:33:05.561"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${epoch}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20230710 13:33:05.562" level="INFO">${epoch} = 1688995985</msg>
<status status="PASS" starttime="20230710 13:33:05.561" endtime="20230710 13:33:05.562"/>
</kw>
<kw name="Open GUI">
<arg>-i</arg>
<arg>blank_${epoch}.ini</arg>
<arg>-d</arg>
<arg>${resultfolder}</arg>
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230710 13:33:05.563" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230710 13:33:05.562" endtime="20230710 13:33:05.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:33:05.563" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': 'ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen\n\nAlso teardown failed:\nSeveral failures occurred:\n\n1) ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen\n\n2) \'Traceback (most recent call last):\n  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;\n    core = ReporterCore()\n  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__\n    base.gui = ReporterGUI()\n  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__\n    self.root = tk.Tk()\n  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__\n    self._loadtk()\n  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk\n    raise RuntimeError("tk.h version (%s) doesn\'t match libtk.a version (%s)"\nRuntimeError: tk.h version (8.5) doesn\'t match libtk.a version (8.6)\' contains \'Traceback\'\n\n3) 1 != 0\n\n4) Had to Terminate Process', '${PREV_TEST_NAME}': 'Select Preview Tab', '${PREV_TEST_STATUS}': 'FAIL', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'First Run', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': Metadata(), '@{appargs}': ['-i', 'blank_1688995985.ini', '-d', '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo'], '@{TEST_TAGS}': ['Issue #147', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230710 13:33:05.563" endtime="20230710 13:33:05.564"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230710 13:33:05.564" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230710 13:33:05.564" endtime="20230710 13:33:05.564"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230710 13:33:05.565" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230710 13:33:05.565" endtime="20230710 13:33:05.565"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:33:05.566" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230710 13:33:05.565" endtime="20230710 13:33:05.566"/>
</kw>
<status status="PASS" starttime="20230710 13:33:05.564" endtime="20230710 13:33:05.566"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:33:05.566" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230710 13:33:05.566" endtime="20230710 13:33:05.566"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:33:05.572" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230710 13:33:05.572" endtime="20230710 13:33:05.572"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230710 13:33:05.572" endtime="20230710 13:33:05.572"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230710 13:33:05.574" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5 -i blank_1688995985.ini -d /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/testdata/Issue-#147/20230320_185055_demo</msg>
<msg timestamp="20230710 13:33:05.580" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230710 13:33:05.572" endtime="20230710 13:33:05.580"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:33:05.582" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230710 13:33:05.581" endtime="20230710 13:33:05.582"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230710 13:33:05.582" endtime="20230710 13:33:05.582"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:33:05.583" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-11.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-11.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:33:05.582" endtime="20230710 13:33:05.860"/>
</kw>
<status status="PASS" starttime="20230710 13:33:05.571" endtime="20230710 13:33:05.860"/>
</kw>
<status status="PASS" starttime="20230710 13:33:05.566" endtime="20230710 13:33:05.860"/>
</kw>
<status status="PASS" starttime="20230710 13:33:05.562" endtime="20230710 13:33:05.860"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230710 13:33:05.862" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230710 13:33:05.862" endtime="20230710 13:33:05.862"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:33:05.863" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230710 13:33:05.862" endtime="20230710 13:33:05.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:33:05.863" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230710 13:33:05.863" endtime="20230710 13:33:05.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:33:05.864" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230710 13:33:05.864" endtime="20230710 13:33:05.864"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:38:05.868" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-12.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-12.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:38:05.867" endtime="20230710 13:38:06.156"/>
</kw>
<msg timestamp="20230710 13:38:06.156" level="FAIL">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen</msg>
<status status="FAIL" starttime="20230710 13:33:05.864" endtime="20230710 13:38:06.157"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230710 13:38:06.157" endtime="20230710 13:38:06.157"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230710 13:38:06.157" endtime="20230710 13:38:06.157"/>
</kw>
<status status="FAIL" starttime="20230710 13:33:05.861" endtime="20230710 13:38:06.158"/>
</kw>
<status status="FAIL" starttime="20230710 13:33:05.861" endtime="20230710 13:38:06.158"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:38:06.159" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230710 13:38:06.159" endtime="20230710 13:38:06.159"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230710 13:38:06.160" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230710 13:38:06.160" endtime="20230710 13:38:06.160"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230710 13:38:06.575" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen.</msg>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:38:06.576" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-13.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-13.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:38:06.576" endtime="20230710 13:38:06.863"/>
</kw>
<msg timestamp="20230710 13:38:06.863" level="FAIL">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen</msg>
<status status="FAIL" starttime="20230710 13:38:06.167" endtime="20230710 13:38:06.863"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:38:06.865" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-14.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-14.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:38:06.864" endtime="20230710 13:38:07.151"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230710 13:38:07.676" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230710 13:38:07.152" endtime="20230710 13:38:07.676"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230710 13:38:07.677" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230710 13:39:07.844" level="INFO">Process did not complete in 1 minute.</msg>
<msg timestamp="20230710 13:39:07.844" level="INFO">Leaving process intact.</msg>
<msg timestamp="20230710 13:39:07.844" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20230710 13:38:07.677" endtime="20230710 13:39:07.844"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230710 13:39:07.845" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230710 13:39:07.845" endtime="20230710 13:39:07.845"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230710 13:39:07.846" endtime="20230710 13:39:07.846"/>
</kw>
<status status="NOT RUN" starttime="20230710 13:39:07.845" endtime="20230710 13:39:07.846"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:39:07.846" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-15.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-15.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:39:07.846" endtime="20230710 13:39:08.139"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20230710 13:39:08.141" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20230710 13:39:08.371" level="INFO">Process completed.</msg>
<msg timestamp="20230710 13:39:08.372" level="INFO">${result} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20230710 13:39:08.140" endtime="20230710 13:39:08.372"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:39:08.379" level="INFO">Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)</msg>
<status status="PASS" starttime="20230710 13:39:08.376" endtime="20230710 13:39:08.379"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20230710 13:39:08.382" level="FAIL">'Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)' contains 'Traceback'</msg>
<status status="FAIL" starttime="20230710 13:39:08.380" endtime="20230710 13:39:08.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230710 13:39:08.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230710 13:39:08.384" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20230710 13:39:08.383" endtime="20230710 13:39:08.384"/>
</kw>
<status status="FAIL" starttime="20230710 13:39:08.373" endtime="20230710 13:39:08.384"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230710 13:39:08.384" level="FAIL">Had to Terminate Process</msg>
<status status="FAIL" starttime="20230710 13:39:08.384" endtime="20230710 13:39:08.384"/>
</kw>
<status status="FAIL" starttime="20230710 13:39:07.846" endtime="20230710 13:39:08.385"/>
</branch>
<status status="FAIL" starttime="20230710 13:39:07.845" endtime="20230710 13:39:08.385"/>
</if>
<status status="FAIL" starttime="20230710 13:38:07.676" endtime="20230710 13:39:08.385"/>
</kw>
<status status="FAIL" starttime="20230710 13:38:06.166" endtime="20230710 13:39:08.385"/>
</kw>
<status status="FAIL" starttime="20230710 13:38:06.160" endtime="20230710 13:39:08.385"/>
</kw>
<status status="FAIL" starttime="20230710 13:38:06.160" endtime="20230710 13:39:08.385"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230710 13:39:08.385" endtime="20230710 13:39:08.385"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230710 13:39:08.386" endtime="20230710 13:39:08.386"/>
</kw>
<status status="NOT RUN" starttime="20230710 13:39:08.385" endtime="20230710 13:39:08.386"/>
</branch>
<status status="FAIL" starttime="20230710 13:38:06.160" endtime="20230710 13:39:08.386"/>
</if>
<status status="FAIL" starttime="20230710 13:38:06.159" endtime="20230710 13:39:08.386"/>
</branch>
<status status="FAIL" starttime="20230710 13:38:06.159" endtime="20230710 13:39:08.386"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:39:08.386" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230710 13:39:08.386" endtime="20230710 13:39:08.387"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230710 13:39:08.890" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230710 13:39:08.387" endtime="20230710 13:39:08.890"/>
</kw>
<status status="FAIL" starttime="20230710 13:38:06.158" endtime="20230710 13:39:08.890">Several failures occurred:

1) ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen

2) 'Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)' contains 'Traceback'

3) 1 != 0

4) Had to Terminate Process</status>
</kw>
<tag>Issue #147</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230710 13:33:05.556" endtime="20230710 13:39:08.891">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen

Also teardown failed:
Several failures occurred:

1) ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen

2) 'Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)' contains 'Traceback'

3) 1 != 0

4) Had to Terminate Process</status>
</test>
<test id="s1-s2-t4" name="New Data Table Section" line="48">
<kw name="Open GUI">
<kw name="Get Variables" library="BuiltIn">
<var>${var}</var>
<doc>Returns a dictionary containing all variables in the current scope.</doc>
<msg timestamp="20230710 13:39:08.893" level="INFO">${var} = {'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Reg...</msg>
<status status="PASS" starttime="20230710 13:39:08.892" endtime="20230710 13:39:08.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${var}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:39:08.894" level="INFO">{'${/}': '/', '${:}': ':', '${\\n}': '\n', '${DEBUG_FILE}': 'NONE', '${EXECDIR}': '/Users/runner/work/rfswarm/rfswarm', '${False}': False, '${IMAGE_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method', '${LOG_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/log.html', '${LOG_LEVEL}': 'INFO', '${None}': None, '${null}': None, '${OUTPUT_DIR}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10', '${OUTPUT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/output.xml', '${platform}': 'macos', '${PREV_TEST_MESSAGE}': 'ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen\n\nAlso teardown failed:\nSeveral failures occurred:\n\n1) ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen\n\n2) \'Traceback (most recent call last):\n  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;\n    core = ReporterCore()\n  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__\n    base.gui = ReporterGUI()\n  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__\n    self.root = tk.Tk()\n  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__\n    self._loadtk()\n  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk\n    raise RuntimeError("tk.h version (%s) doesn\'t match libtk.a version (%s)"\nRuntimeError: tk.h version (8.5) doesn\'t match libtk.a version (8.6)\' contains \'Traceback\'\n\n3) 1 != 0\n\n4) Had to Terminate Process', '${PREV_TEST_NAME}': 'First Run', '${PREV_TEST_STATUS}': 'FAIL', '${process}': 'None', '${pyfile}': '/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py', '${REPORT_FILE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/report.html', '${SPACE}': ' ', '${sssleep}': '0.5', '${SUITE_DOCUMENTATION}': '', '${SUITE_NAME}': 'Reporter.GUI Basic', '${SUITE_SOURCE}': '/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/GUI_Basic.robot', '${TEMPDIR}': '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T', '${TEST_DOCUMENTATION}': '', '${TEST_NAME}': 'New Data Table Section', '${True}': True, '&amp;{OPTIONS}': {'include': ['macos-latest'], 'exclude': [], 'skip': [], 'skip_on_failure': []}, '&amp;{SUITE_METADATA}': Metadata(), '@{appargs}': [], '@{TEST_TAGS}': ['Issue #149', 'Issue #150', 'macos-latest', 'ubuntu-latest', 'windows-latest']}</msg>
<status status="PASS" starttime="20230710 13:39:08.893" endtime="20230710 13:39:08.894"/>
</kw>
<kw name="Get Platform">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{platforms}</var>
<arg>Linux=ubuntu</arg>
<arg>Darwin=macos</arg>
<arg>Java=notsupported</arg>
<arg>Windows=windows</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230710 13:39:08.895" level="INFO">&amp;{platforms} = { Linux=ubuntu | Darwin=macos | Java=notsupported | Windows=windows }</msg>
<status status="PASS" starttime="20230710 13:39:08.894" endtime="20230710 13:39:08.895"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${os}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230710 13:39:08.895" level="INFO">${os} = Darwin</msg>
<status status="PASS" starttime="20230710 13:39:08.895" endtime="20230710 13:39:08.895"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>${platforms}[${os}]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:39:08.896" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230710 13:39:08.895" endtime="20230710 13:39:08.896"/>
</kw>
<status status="PASS" starttime="20230710 13:39:08.894" endtime="20230710 13:39:08.896"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Open GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:39:08.896" level="INFO">${keyword} = Open GUI macos</msg>
<status status="PASS" starttime="20230710 13:39:08.896" endtime="20230710 13:39:08.896"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<arg>@{appargs}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Open GUI macos">
<arg>@{appargs}</arg>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${platform}</arg>
<arg>macos</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:39:08.903" level="INFO">${platform} = macos</msg>
<status status="PASS" starttime="20230710 13:39:08.903" endtime="20230710 13:39:08.903"/>
</kw>
<kw name="Set Confidence" library="ImageHorizonLibrary">
<arg>0.9</arg>
<doc>Sets the accuracy when finding images.</doc>
<status status="PASS" starttime="20230710 13:39:08.903" endtime="20230710 13:39:08.903"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>python3</arg>
<arg>${pyfile}</arg>
<arg>-g</arg>
<arg>5</arg>
<arg>@{appargs}</arg>
<arg>alias=Reporter</arg>
<arg>stdout=${OUTPUT DIR}${/}stdout.txt</arg>
<arg>stderr=${OUTPUT DIR}${/}stderr.txt</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20230710 13:39:08.905" level="INFO">Starting process:
python3 /Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py -g 5</msg>
<msg timestamp="20230710 13:39:08.912" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230710 13:39:08.904" endtime="20230710 13:39:08.912"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>${process}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:39:08.914" level="INFO">${process} = &lt;Popen: returncode: None args: ['python3', '/Users/runner/work/rfswarm/rfswa...&gt;</msg>
<status status="PASS" starttime="20230710 13:39:08.913" endtime="20230710 13:39:08.914"/>
</kw>
<kw name="Set Screenshot Folder" library="ImageHorizonLibrary">
<arg>${OUTPUT DIR}</arg>
<doc>Sets the folder where screenshots are saved to.</doc>
<status status="PASS" starttime="20230710 13:39:08.914" endtime="20230710 13:39:08.915"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:39:08.915" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-16.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-16.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:39:08.915" endtime="20230710 13:39:09.201"/>
</kw>
<status status="PASS" starttime="20230710 13:39:08.902" endtime="20230710 13:39:09.201"/>
</kw>
<status status="PASS" starttime="20230710 13:39:08.897" endtime="20230710 13:39:09.201"/>
</kw>
<status status="PASS" starttime="20230710 13:39:08.892" endtime="20230710 13:39:09.201"/>
</kw>
<kw name="Wait For Status">
<arg>PreviewLoaded</arg>
<kw name="Convert To Lower Case" library="String">
<var>${statusl}</var>
<arg>${status}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230710 13:39:09.203" level="INFO">${statusl} = previewloaded</msg>
<status status="PASS" starttime="20230710 13:39:09.202" endtime="20230710 13:39:09.203"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${img}</var>
<arg>reporter_${platform}_status_${statusl}.png</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:39:09.203" level="INFO">${img} = reporter_macos_status_previewloaded.png</msg>
<status status="PASS" starttime="20230710 13:39:09.203" endtime="20230710 13:39:09.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:39:09.204" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter</msg>
<status status="PASS" starttime="20230710 13:39:09.203" endtime="20230710 13:39:09.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${IMAGE_DIR}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:39:09.204" level="INFO">/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method</msg>
<status status="PASS" starttime="20230710 13:39:09.204" endtime="20230710 13:39:09.204"/>
</kw>
<kw name="Wait For" library="ImageHorizonLibrary">
<arg>${img}</arg>
<arg>timeout=${timeout}</arg>
<doc>Tries to locate given image from the screen for given time.</doc>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:44:09.373" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-17.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-17.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:44:09.371" endtime="20230710 13:44:09.656"/>
</kw>
<msg timestamp="20230710 13:44:09.657" level="FAIL">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen</msg>
<status status="FAIL" starttime="20230710 13:39:09.204" endtime="20230710 13:44:09.657"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${sssleep}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230710 13:44:09.658" endtime="20230710 13:44:09.658"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230710 13:44:09.658" endtime="20230710 13:44:09.658"/>
</kw>
<status status="FAIL" starttime="20230710 13:39:09.202" endtime="20230710 13:44:09.658"/>
</kw>
<kw name="Click Section">
<arg>Report</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.659" endtime="20230710 13:44:09.659"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230710 13:44:09.659" endtime="20230710 13:44:09.659"/>
</kw>
<kw name="Click Button">
<arg>AddSection</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.659" endtime="20230710 13:44:09.659"/>
</kw>
<kw name="Click To The Below Of Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_label_sectionname.png</arg>
<arg>20</arg>
<doc>Clicks below of reference image by given offset.</doc>
<status status="NOT RUN" starttime="20230710 13:44:09.659" endtime="20230710 13:44:09.659"/>
</kw>
<kw name="Type" library="ImageHorizonLibrary">
<arg>Issue #149</arg>
<doc>Type text and keyboard keys.</doc>
<status status="NOT RUN" starttime="20230710 13:44:09.659" endtime="20230710 13:44:09.660"/>
</kw>
<kw name="Click Button">
<arg>OK</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.660" endtime="20230710 13:44:09.660"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<status status="NOT RUN" starttime="20230710 13:44:09.660" endtime="20230710 13:44:09.660"/>
</kw>
<kw name="Click Section">
<arg>Issue#149</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.660" endtime="20230710 13:44:09.660"/>
</kw>
<kw name="Select Field With Label">
<arg>Type</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.660" endtime="20230710 13:44:09.660"/>
</kw>
<kw name="Select Option">
<arg>DataTable</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.660" endtime="20230710 13:44:09.660"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" starttime="20230710 13:44:09.661" endtime="20230710 13:44:09.661"/>
</kw>
<kw name="Select Field With Label">
<arg>ShowGraphColours</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.661" endtime="20230710 13:44:09.661"/>
</kw>
<kw name="Select Field With Label">
<arg>DataType</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.661" endtime="20230710 13:44:09.661"/>
</kw>
<kw name="Select Option">
<arg>Result</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.661" endtime="20230710 13:44:09.661"/>
</kw>
<kw name="Select Field With Label">
<arg>ResultType</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.661" endtime="20230710 13:44:09.661"/>
</kw>
<kw name="Select Option">
<arg>ResponseTime</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.661" endtime="20230710 13:44:09.661"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>Wait For Status</arg>
<arg>PreviewLoaded</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" starttime="20230710 13:44:09.662" endtime="20230710 13:44:09.662"/>
</kw>
<kw name="Click Button">
<arg>GenerateHTML</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.662" endtime="20230710 13:44:09.662"/>
</kw>
<kw name="Wait For Status">
<arg>SavedXHTMLReport</arg>
<status status="NOT RUN" starttime="20230710 13:44:09.662" endtime="20230710 13:44:09.662"/>
</kw>
<kw name="Close GUI" type="TEARDOWN">
<kw name="Set Variable" library="BuiltIn">
<var>${keyword}</var>
<arg>Close GUI ${platform}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230710 13:44:09.663" level="INFO">${keyword} = Close GUI macos</msg>
<status status="PASS" starttime="20230710 13:44:09.663" endtime="20230710 13:44:09.663"/>
</kw>
<if>
<branch type="IF" condition="${process}">
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230710 13:44:09.664" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230710 13:44:09.664" endtime="20230710 13:44:09.664"/>
</kw>
<if>
<branch type="IF" condition="${running}">
<kw name="Run Keyword" library="BuiltIn">
<arg>${keyword}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Close GUI macos">
<kw name="Click Image" library="ImageHorizonLibrary">
<arg>reporter_${platform}_button_closewindow.png</arg>
<doc>Finds the reference image on screen and clicks it once.</doc>
<msg timestamp="20230710 13:44:10.073" level="INFO">Image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen.</msg>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:44:10.075" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-18.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-18.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:44:10.074" endtime="20230710 13:44:10.362"/>
</kw>
<msg timestamp="20230710 13:44:10.363" level="FAIL">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen</msg>
<status status="FAIL" starttime="20230710 13:44:09.671" endtime="20230710 13:44:10.363"/>
</kw>
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:44:10.364" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-19.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-19.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:44:10.364" endtime="20230710 13:44:10.649"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230710 13:44:11.167" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230710 13:44:10.650" endtime="20230710 13:44:11.167"/>
</kw>
<kw name="End Process If Still Running">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20230710 13:44:11.169" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230710 13:45:11.191" level="INFO">Process did not complete in 1 minute.</msg>
<msg timestamp="20230710 13:45:11.192" level="INFO">Leaving process intact.</msg>
<msg timestamp="20230710 13:45:11.192" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20230710 13:44:11.168" endtime="20230710 13:45:11.192"/>
</kw>
<kw name="Is Process Running" library="Process">
<var>${running}</var>
<arg>${process}</arg>
<doc>Checks is the process running or not.</doc>
<msg timestamp="20230710 13:45:11.193" level="INFO">${running} = True</msg>
<status status="PASS" starttime="20230710 13:45:11.192" endtime="20230710 13:45:11.193"/>
</kw>
<if>
<branch type="IF" condition="not ${running}">
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230710 13:45:11.193" endtime="20230710 13:45:11.193"/>
</kw>
<status status="NOT RUN" starttime="20230710 13:45:11.193" endtime="20230710 13:45:11.193"/>
</branch>
<branch type="ELSE">
<kw name="Take A Screenshot" library="ImageHorizonLibrary">
<doc>Takes a screenshot of the screen.</doc>
<msg timestamp="20230710 13:45:11.194" level="INFO" html="true">Screenshot taken: /Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-20.png&lt;br/&gt;&lt;img src="/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Logs/macos-latest_3.10/Reporter.GUIBasic-screenshot-20.png" width="100%" /&gt;</msg>
<status status="PASS" starttime="20230710 13:45:11.193" endtime="20230710 13:45:11.485"/>
</kw>
<kw name="Terminate Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20230710 13:45:11.486" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20230710 13:45:11.591" level="INFO">Process completed.</msg>
<msg timestamp="20230710 13:45:11.591" level="INFO">${result} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20230710 13:45:11.485" endtime="20230710 13:45:11.591"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<kw name="Log" library="BuiltIn">
<arg>${result.stderr}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230710 13:45:11.597" level="INFO">Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)</msg>
<status status="PASS" starttime="20230710 13:45:11.594" endtime="20230710 13:45:11.598"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result.stderr}</arg>
<arg>Traceback</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20230710 13:45:11.602" level="FAIL">'Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)' contains 'Traceback'</msg>
<status status="FAIL" starttime="20230710 13:45:11.598" endtime="20230710 13:45:11.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230710 13:45:11.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230710 13:45:11.606" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20230710 13:45:11.603" endtime="20230710 13:45:11.607"/>
</kw>
<status status="FAIL" starttime="20230710 13:45:11.592" endtime="20230710 13:45:11.607"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Had to Terminate Process</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230710 13:45:11.609" level="FAIL">Had to Terminate Process</msg>
<status status="FAIL" starttime="20230710 13:45:11.608" endtime="20230710 13:45:11.609"/>
</kw>
<status status="FAIL" starttime="20230710 13:45:11.193" endtime="20230710 13:45:11.609"/>
</branch>
<status status="FAIL" starttime="20230710 13:45:11.193" endtime="20230710 13:45:11.609"/>
</if>
<status status="FAIL" starttime="20230710 13:44:11.168" endtime="20230710 13:45:11.610"/>
</kw>
<status status="FAIL" starttime="20230710 13:44:09.671" endtime="20230710 13:45:11.610"/>
</kw>
<status status="FAIL" starttime="20230710 13:44:09.665" endtime="20230710 13:45:11.611"/>
</kw>
<status status="FAIL" starttime="20230710 13:44:09.664" endtime="20230710 13:45:11.611"/>
</branch>
<branch type="ELSE">
<kw name="Wait For Process" library="Process">
<var>${result}</var>
<arg>${process}</arg>
<arg>timeout=60</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230710 13:45:11.612" endtime="20230710 13:45:11.612"/>
</kw>
<kw name="Check Result">
<arg>${result}</arg>
<status status="NOT RUN" starttime="20230710 13:45:11.612" endtime="20230710 13:45:11.613"/>
</kw>
<status status="NOT RUN" starttime="20230710 13:45:11.611" endtime="20230710 13:45:11.613"/>
</branch>
<status status="FAIL" starttime="20230710 13:44:09.664" endtime="20230710 13:45:11.613"/>
</if>
<status status="FAIL" starttime="20230710 13:44:09.664" endtime="20230710 13:45:11.613"/>
</branch>
<status status="FAIL" starttime="20230710 13:44:09.664" endtime="20230710 13:45:11.613"/>
</if>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$process</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230710 13:45:11.615" level="INFO">${process} = None</msg>
<status status="PASS" starttime="20230710 13:45:11.614" endtime="20230710 13:45:11.615"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230710 13:45:12.122" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20230710 13:45:11.615" endtime="20230710 13:45:12.122"/>
</kw>
<status status="FAIL" starttime="20230710 13:44:09.662" endtime="20230710 13:45:12.122">Several failures occurred:

1) ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen

2) 'Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)' contains 'Traceback'

3) 1 != 0

4) Had to Terminate Process</status>
</kw>
<tag>Issue #149</tag>
<tag>Issue #150</tag>
<tag>macos-latest</tag>
<tag>ubuntu-latest</tag>
<tag>windows-latest</tag>
<status status="FAIL" starttime="20230710 13:39:08.891" endtime="20230710 13:45:12.123">ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_status_previewloaded.png" was not found on screen

Also teardown failed:
Several failures occurred:

1) ImageNotFoundException: Reference image "/Users/runner/work/rfswarm/rfswarm/Tests/Regression/Reporter/Images/file_method/reporter_macos_button_closewindow.png" was not found on screen

2) 'Traceback (most recent call last):
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 7779, in &lt;module&gt;
    core = ReporterCore()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 2455, in __init__
    base.gui = ReporterGUI()
  File "/Users/runner/work/rfswarm/rfswarm/rfswarm_reporter/rfswarm_reporter.py", line 4462, in __init__
    self.root = tk.Tk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2301, in __init__
    self._loadtk()
  File "/Users/runner/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/tkinter/__init__.py", line 2317, in _loadtk
    raise RuntimeError("tk.h version (%s) doesn't match libtk.a version (%s)"
RuntimeError: tk.h version (8.5) doesn't match libtk.a version (8.6)' contains 'Traceback'

3) 1 != 0

4) Had to Terminate Process</status>
</test>
<status status="FAIL" starttime="20230710 13:20:48.980" endtime="20230710 13:45:12.126"/>
</suite>
<status status="FAIL" starttime="20230710 13:20:13.830" endtime="20230710 13:45:12.129"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="4" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DOCX</stat>
<stat pass="1" fail="0" skip="0">HTML</stat>
<stat pass="3" fail="0" skip="0">Issue #144</stat>
<stat pass="0" fail="1" skip="0">Issue #147</stat>
<stat pass="0" fail="1" skip="0">Issue #149</stat>
<stat pass="0" fail="1" skip="0">Issue #150</stat>
<stat pass="5" fail="4" skip="0">macos-latest</stat>
<stat pass="5" fail="4" skip="0">ubuntu-latest</stat>
<stat pass="5" fail="4" skip="0">windows-latest</stat>
<stat pass="1" fail="0" skip="0">XLSX</stat>
</tag>
<suite>
<stat pass="5" fail="4" skip="0" id="s1" name="Reporter">Reporter</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="CommandLine">Reporter.CommandLine</stat>
<stat pass="0" fail="4" skip="0" id="s1-s2" name="GUI Basic">Reporter.GUI Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
